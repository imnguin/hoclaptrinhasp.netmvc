#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MNTCiname.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="MNTCinema")]
	public partial class MNTCinemaDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertDatCho(DatCho instance);
    partial void UpdateDatCho(DatCho instance);
    partial void DeleteDatCho(DatCho instance);
    partial void InsertThoiGian(ThoiGian instance);
    partial void UpdateThoiGian(ThoiGian instance);
    partial void DeleteThoiGian(ThoiGian instance);
    partial void InsertGheNgoi(GheNgoi instance);
    partial void UpdateGheNgoi(GheNgoi instance);
    partial void DeleteGheNgoi(GheNgoi instance);
    partial void InsertKeHoach(KeHoach instance);
    partial void UpdateKeHoach(KeHoach instance);
    partial void DeleteKeHoach(KeHoach instance);
    partial void InsertNguoiDung(NguoiDung instance);
    partial void UpdateNguoiDung(NguoiDung instance);
    partial void DeleteNguoiDung(NguoiDung instance);
    partial void InsertPhim(Phim instance);
    partial void UpdatePhim(Phim instance);
    partial void DeletePhim(Phim instance);
    partial void InsertPhong(Phong instance);
    partial void UpdatePhong(Phong instance);
    partial void DeletePhong(Phong instance);
    partial void InsertQuyen(Quyen instance);
    partial void UpdateQuyen(Quyen instance);
    partial void DeleteQuyen(Quyen instance);
    partial void InsertRapPhim(RapPhim instance);
    partial void UpdateRapPhim(RapPhim instance);
    partial void DeleteRapPhim(RapPhim instance);
    partial void InsertTheLoai(TheLoai instance);
    partial void UpdateTheLoai(TheLoai instance);
    partial void DeleteTheLoai(TheLoai instance);
    #endregion
		
		public MNTCinemaDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["MNTCinemaConnectionString1"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public MNTCinemaDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MNTCinemaDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MNTCinemaDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MNTCinemaDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<DatCho> DatChos
		{
			get
			{
				return this.GetTable<DatCho>();
			}
		}
		
		public System.Data.Linq.Table<ThoiGian> ThoiGians
		{
			get
			{
				return this.GetTable<ThoiGian>();
			}
		}
		
		public System.Data.Linq.Table<GheNgoi> GheNgois
		{
			get
			{
				return this.GetTable<GheNgoi>();
			}
		}
		
		public System.Data.Linq.Table<KeHoach> KeHoaches
		{
			get
			{
				return this.GetTable<KeHoach>();
			}
		}
		
		public System.Data.Linq.Table<NguoiDung> NguoiDungs
		{
			get
			{
				return this.GetTable<NguoiDung>();
			}
		}
		
		public System.Data.Linq.Table<Phim> Phims
		{
			get
			{
				return this.GetTable<Phim>();
			}
		}
		
		public System.Data.Linq.Table<Phong> Phongs
		{
			get
			{
				return this.GetTable<Phong>();
			}
		}
		
		public System.Data.Linq.Table<Quyen> Quyens
		{
			get
			{
				return this.GetTable<Quyen>();
			}
		}
		
		public System.Data.Linq.Table<RapPhim> RapPhims
		{
			get
			{
				return this.GetTable<RapPhim>();
			}
		}
		
		public System.Data.Linq.Table<TheLoai> TheLoais
		{
			get
			{
				return this.GetTable<TheLoai>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DatCho")]
	public partial class DatCho : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ID_NguoiDung;
		
		private int _ID_KeHoach;
		
		private int _ID_GheNgoi;
		
		private decimal _Gia;
		
		private System.DateTime _Ngay;
		
		private System.TimeSpan _GioChieu;
		
		private System.DateTime _NgayDat;
		
		private System.Nullable<bool> _ThanhToan;
		
		private EntityRef<GheNgoi> _GheNgoi;
		
		private EntityRef<KeHoach> _KeHoach;
		
		private EntityRef<NguoiDung> _NguoiDung;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnID_NguoiDungChanging(int value);
    partial void OnID_NguoiDungChanged();
    partial void OnID_KeHoachChanging(int value);
    partial void OnID_KeHoachChanged();
    partial void OnID_GheNgoiChanging(int value);
    partial void OnID_GheNgoiChanged();
    partial void OnGiaChanging(decimal value);
    partial void OnGiaChanged();
    partial void OnNgayChanging(System.DateTime value);
    partial void OnNgayChanged();
    partial void OnGioChieuChanging(System.TimeSpan value);
    partial void OnGioChieuChanged();
    partial void OnNgayDatChanging(System.DateTime value);
    partial void OnNgayDatChanged();
    partial void OnThanhToanChanging(System.Nullable<bool> value);
    partial void OnThanhToanChanged();
    #endregion
		
		public DatCho()
		{
			this._GheNgoi = default(EntityRef<GheNgoi>);
			this._KeHoach = default(EntityRef<KeHoach>);
			this._NguoiDung = default(EntityRef<NguoiDung>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_NguoiDung", DbType="Int NOT NULL")]
		public int ID_NguoiDung
		{
			get
			{
				return this._ID_NguoiDung;
			}
			set
			{
				if ((this._ID_NguoiDung != value))
				{
					if (this._NguoiDung.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_NguoiDungChanging(value);
					this.SendPropertyChanging();
					this._ID_NguoiDung = value;
					this.SendPropertyChanged("ID_NguoiDung");
					this.OnID_NguoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_KeHoach", DbType="Int NOT NULL")]
		public int ID_KeHoach
		{
			get
			{
				return this._ID_KeHoach;
			}
			set
			{
				if ((this._ID_KeHoach != value))
				{
					if (this._KeHoach.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_KeHoachChanging(value);
					this.SendPropertyChanging();
					this._ID_KeHoach = value;
					this.SendPropertyChanged("ID_KeHoach");
					this.OnID_KeHoachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_GheNgoi", DbType="Int NOT NULL")]
		public int ID_GheNgoi
		{
			get
			{
				return this._ID_GheNgoi;
			}
			set
			{
				if ((this._ID_GheNgoi != value))
				{
					if (this._GheNgoi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_GheNgoiChanging(value);
					this.SendPropertyChanging();
					this._ID_GheNgoi = value;
					this.SendPropertyChanged("ID_GheNgoi");
					this.OnID_GheNgoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gia", DbType="Decimal(18,0) NOT NULL")]
		public decimal Gia
		{
			get
			{
				return this._Gia;
			}
			set
			{
				if ((this._Gia != value))
				{
					this.OnGiaChanging(value);
					this.SendPropertyChanging();
					this._Gia = value;
					this.SendPropertyChanged("Gia");
					this.OnGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngay", DbType="Date NOT NULL")]
		public System.DateTime Ngay
		{
			get
			{
				return this._Ngay;
			}
			set
			{
				if ((this._Ngay != value))
				{
					this.OnNgayChanging(value);
					this.SendPropertyChanging();
					this._Ngay = value;
					this.SendPropertyChanged("Ngay");
					this.OnNgayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioChieu", DbType="Time NOT NULL")]
		public System.TimeSpan GioChieu
		{
			get
			{
				return this._GioChieu;
			}
			set
			{
				if ((this._GioChieu != value))
				{
					this.OnGioChieuChanging(value);
					this.SendPropertyChanging();
					this._GioChieu = value;
					this.SendPropertyChanged("GioChieu");
					this.OnGioChieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayDat", DbType="Date NOT NULL")]
		public System.DateTime NgayDat
		{
			get
			{
				return this._NgayDat;
			}
			set
			{
				if ((this._NgayDat != value))
				{
					this.OnNgayDatChanging(value);
					this.SendPropertyChanging();
					this._NgayDat = value;
					this.SendPropertyChanged("NgayDat");
					this.OnNgayDatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThanhToan", DbType="Bit")]
		public System.Nullable<bool> ThanhToan
		{
			get
			{
				return this._ThanhToan;
			}
			set
			{
				if ((this._ThanhToan != value))
				{
					this.OnThanhToanChanging(value);
					this.SendPropertyChanging();
					this._ThanhToan = value;
					this.SendPropertyChanged("ThanhToan");
					this.OnThanhToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GheNgoi_DatCho", Storage="_GheNgoi", ThisKey="ID_GheNgoi", OtherKey="ID", IsForeignKey=true)]
		public GheNgoi GheNgoi
		{
			get
			{
				return this._GheNgoi.Entity;
			}
			set
			{
				GheNgoi previousValue = this._GheNgoi.Entity;
				if (((previousValue != value) 
							|| (this._GheNgoi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GheNgoi.Entity = null;
						previousValue.DatChos.Remove(this);
					}
					this._GheNgoi.Entity = value;
					if ((value != null))
					{
						value.DatChos.Add(this);
						this._ID_GheNgoi = value.ID;
					}
					else
					{
						this._ID_GheNgoi = default(int);
					}
					this.SendPropertyChanged("GheNgoi");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KeHoach_DatCho", Storage="_KeHoach", ThisKey="ID_KeHoach", OtherKey="ID", IsForeignKey=true)]
		public KeHoach KeHoach
		{
			get
			{
				return this._KeHoach.Entity;
			}
			set
			{
				KeHoach previousValue = this._KeHoach.Entity;
				if (((previousValue != value) 
							|| (this._KeHoach.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KeHoach.Entity = null;
						previousValue.DatChos.Remove(this);
					}
					this._KeHoach.Entity = value;
					if ((value != null))
					{
						value.DatChos.Add(this);
						this._ID_KeHoach = value.ID;
					}
					else
					{
						this._ID_KeHoach = default(int);
					}
					this.SendPropertyChanged("KeHoach");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_DatCho", Storage="_NguoiDung", ThisKey="ID_NguoiDung", OtherKey="ID", IsForeignKey=true)]
		public NguoiDung NguoiDung
		{
			get
			{
				return this._NguoiDung.Entity;
			}
			set
			{
				NguoiDung previousValue = this._NguoiDung.Entity;
				if (((previousValue != value) 
							|| (this._NguoiDung.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NguoiDung.Entity = null;
						previousValue.DatChos.Remove(this);
					}
					this._NguoiDung.Entity = value;
					if ((value != null))
					{
						value.DatChos.Add(this);
						this._ID_NguoiDung = value.ID;
					}
					else
					{
						this._ID_NguoiDung = default(int);
					}
					this.SendPropertyChanged("NguoiDung");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ThoiGian")]
	public partial class ThoiGian : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ID_KeHoach;
		
		private System.TimeSpan _GioChieu;
		
		private EntityRef<KeHoach> _KeHoach;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnID_KeHoachChanging(int value);
    partial void OnID_KeHoachChanged();
    partial void OnGioChieuChanging(System.TimeSpan value);
    partial void OnGioChieuChanged();
    #endregion
		
		public ThoiGian()
		{
			this._KeHoach = default(EntityRef<KeHoach>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_KeHoach", DbType="Int NOT NULL")]
		public int ID_KeHoach
		{
			get
			{
				return this._ID_KeHoach;
			}
			set
			{
				if ((this._ID_KeHoach != value))
				{
					if (this._KeHoach.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_KeHoachChanging(value);
					this.SendPropertyChanging();
					this._ID_KeHoach = value;
					this.SendPropertyChanged("ID_KeHoach");
					this.OnID_KeHoachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioChieu", DbType="Time NOT NULL")]
		public System.TimeSpan GioChieu
		{
			get
			{
				return this._GioChieu;
			}
			set
			{
				if ((this._GioChieu != value))
				{
					this.OnGioChieuChanging(value);
					this.SendPropertyChanging();
					this._GioChieu = value;
					this.SendPropertyChanged("GioChieu");
					this.OnGioChieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KeHoach_ThoiGian", Storage="_KeHoach", ThisKey="ID_KeHoach", OtherKey="ID", IsForeignKey=true)]
		public KeHoach KeHoach
		{
			get
			{
				return this._KeHoach.Entity;
			}
			set
			{
				KeHoach previousValue = this._KeHoach.Entity;
				if (((previousValue != value) 
							|| (this._KeHoach.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KeHoach.Entity = null;
						previousValue.ThoiGians.Remove(this);
					}
					this._KeHoach.Entity = value;
					if ((value != null))
					{
						value.ThoiGians.Add(this);
						this._ID_KeHoach = value.ID;
					}
					else
					{
						this._ID_KeHoach = default(int);
					}
					this.SendPropertyChanged("KeHoach");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GheNgoi")]
	public partial class GheNgoi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _LoaiGhe;
		
		private int _ID_Phong;
		
		private string _Hang;
		
		private int _SoGhe;
		
		private decimal _Gia;
		
		private EntitySet<DatCho> _DatChos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnLoaiGheChanging(string value);
    partial void OnLoaiGheChanged();
    partial void OnID_PhongChanging(int value);
    partial void OnID_PhongChanged();
    partial void OnHangChanging(string value);
    partial void OnHangChanged();
    partial void OnSoGheChanging(int value);
    partial void OnSoGheChanged();
    partial void OnGiaChanging(decimal value);
    partial void OnGiaChanged();
    #endregion
		
		public GheNgoi()
		{
			this._DatChos = new EntitySet<DatCho>(new Action<DatCho>(this.attach_DatChos), new Action<DatCho>(this.detach_DatChos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoaiGhe", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LoaiGhe
		{
			get
			{
				return this._LoaiGhe;
			}
			set
			{
				if ((this._LoaiGhe != value))
				{
					this.OnLoaiGheChanging(value);
					this.SendPropertyChanging();
					this._LoaiGhe = value;
					this.SendPropertyChanged("LoaiGhe");
					this.OnLoaiGheChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Phong", DbType="Int NOT NULL")]
		public int ID_Phong
		{
			get
			{
				return this._ID_Phong;
			}
			set
			{
				if ((this._ID_Phong != value))
				{
					this.OnID_PhongChanging(value);
					this.SendPropertyChanging();
					this._ID_Phong = value;
					this.SendPropertyChanged("ID_Phong");
					this.OnID_PhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hang", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string Hang
		{
			get
			{
				return this._Hang;
			}
			set
			{
				if ((this._Hang != value))
				{
					this.OnHangChanging(value);
					this.SendPropertyChanging();
					this._Hang = value;
					this.SendPropertyChanged("Hang");
					this.OnHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoGhe", DbType="Int NOT NULL")]
		public int SoGhe
		{
			get
			{
				return this._SoGhe;
			}
			set
			{
				if ((this._SoGhe != value))
				{
					this.OnSoGheChanging(value);
					this.SendPropertyChanging();
					this._SoGhe = value;
					this.SendPropertyChanged("SoGhe");
					this.OnSoGheChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gia", DbType="Decimal(18,0) NOT NULL")]
		public decimal Gia
		{
			get
			{
				return this._Gia;
			}
			set
			{
				if ((this._Gia != value))
				{
					this.OnGiaChanging(value);
					this.SendPropertyChanging();
					this._Gia = value;
					this.SendPropertyChanged("Gia");
					this.OnGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GheNgoi_DatCho", Storage="_DatChos", ThisKey="ID", OtherKey="ID_GheNgoi")]
		public EntitySet<DatCho> DatChos
		{
			get
			{
				return this._DatChos;
			}
			set
			{
				this._DatChos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DatChos(DatCho entity)
		{
			this.SendPropertyChanging();
			entity.GheNgoi = this;
		}
		
		private void detach_DatChos(DatCho entity)
		{
			this.SendPropertyChanging();
			entity.GheNgoi = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KeHoach")]
	public partial class KeHoach : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ID_Phim;
		
		private int _ID_Phong;
		
		private System.DateTime _NgayTao;
		
		private System.DateTime _NgayBatDau;
		
		private System.DateTime _NgayKetThuc;
		
		private EntitySet<DatCho> _DatChos;
		
		private EntitySet<ThoiGian> _ThoiGians;
		
		private EntityRef<Phim> _Phim;
		
		private EntityRef<Phong> _Phong;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnID_PhimChanging(int value);
    partial void OnID_PhimChanged();
    partial void OnID_PhongChanging(int value);
    partial void OnID_PhongChanged();
    partial void OnNgayTaoChanging(System.DateTime value);
    partial void OnNgayTaoChanged();
    partial void OnNgayBatDauChanging(System.DateTime value);
    partial void OnNgayBatDauChanged();
    partial void OnNgayKetThucChanging(System.DateTime value);
    partial void OnNgayKetThucChanged();
    #endregion
		
		public KeHoach()
		{
			this._DatChos = new EntitySet<DatCho>(new Action<DatCho>(this.attach_DatChos), new Action<DatCho>(this.detach_DatChos));
			this._ThoiGians = new EntitySet<ThoiGian>(new Action<ThoiGian>(this.attach_ThoiGians), new Action<ThoiGian>(this.detach_ThoiGians));
			this._Phim = default(EntityRef<Phim>);
			this._Phong = default(EntityRef<Phong>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Phim", DbType="Int NOT NULL")]
		public int ID_Phim
		{
			get
			{
				return this._ID_Phim;
			}
			set
			{
				if ((this._ID_Phim != value))
				{
					if (this._Phim.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_PhimChanging(value);
					this.SendPropertyChanging();
					this._ID_Phim = value;
					this.SendPropertyChanged("ID_Phim");
					this.OnID_PhimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Phong", DbType="Int NOT NULL")]
		public int ID_Phong
		{
			get
			{
				return this._ID_Phong;
			}
			set
			{
				if ((this._ID_Phong != value))
				{
					if (this._Phong.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_PhongChanging(value);
					this.SendPropertyChanging();
					this._ID_Phong = value;
					this.SendPropertyChanged("ID_Phong");
					this.OnID_PhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayTao", DbType="Date NOT NULL")]
		public System.DateTime NgayTao
		{
			get
			{
				return this._NgayTao;
			}
			set
			{
				if ((this._NgayTao != value))
				{
					this.OnNgayTaoChanging(value);
					this.SendPropertyChanging();
					this._NgayTao = value;
					this.SendPropertyChanged("NgayTao");
					this.OnNgayTaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayBatDau", DbType="Date NOT NULL")]
		public System.DateTime NgayBatDau
		{
			get
			{
				return this._NgayBatDau;
			}
			set
			{
				if ((this._NgayBatDau != value))
				{
					this.OnNgayBatDauChanging(value);
					this.SendPropertyChanging();
					this._NgayBatDau = value;
					this.SendPropertyChanged("NgayBatDau");
					this.OnNgayBatDauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayKetThuc", DbType="Date NOT NULL")]
		public System.DateTime NgayKetThuc
		{
			get
			{
				return this._NgayKetThuc;
			}
			set
			{
				if ((this._NgayKetThuc != value))
				{
					this.OnNgayKetThucChanging(value);
					this.SendPropertyChanging();
					this._NgayKetThuc = value;
					this.SendPropertyChanged("NgayKetThuc");
					this.OnNgayKetThucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KeHoach_DatCho", Storage="_DatChos", ThisKey="ID", OtherKey="ID_KeHoach")]
		public EntitySet<DatCho> DatChos
		{
			get
			{
				return this._DatChos;
			}
			set
			{
				this._DatChos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KeHoach_ThoiGian", Storage="_ThoiGians", ThisKey="ID", OtherKey="ID_KeHoach")]
		public EntitySet<ThoiGian> ThoiGians
		{
			get
			{
				return this._ThoiGians;
			}
			set
			{
				this._ThoiGians.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phim_KeHoach", Storage="_Phim", ThisKey="ID_Phim", OtherKey="ID", IsForeignKey=true)]
		public Phim Phim
		{
			get
			{
				return this._Phim.Entity;
			}
			set
			{
				Phim previousValue = this._Phim.Entity;
				if (((previousValue != value) 
							|| (this._Phim.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Phim.Entity = null;
						previousValue.KeHoaches.Remove(this);
					}
					this._Phim.Entity = value;
					if ((value != null))
					{
						value.KeHoaches.Add(this);
						this._ID_Phim = value.ID;
					}
					else
					{
						this._ID_Phim = default(int);
					}
					this.SendPropertyChanged("Phim");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phong_KeHoach", Storage="_Phong", ThisKey="ID_Phong", OtherKey="ID", IsForeignKey=true)]
		public Phong Phong
		{
			get
			{
				return this._Phong.Entity;
			}
			set
			{
				Phong previousValue = this._Phong.Entity;
				if (((previousValue != value) 
							|| (this._Phong.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Phong.Entity = null;
						previousValue.KeHoaches.Remove(this);
					}
					this._Phong.Entity = value;
					if ((value != null))
					{
						value.KeHoaches.Add(this);
						this._ID_Phong = value.ID;
					}
					else
					{
						this._ID_Phong = default(int);
					}
					this.SendPropertyChanged("Phong");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DatChos(DatCho entity)
		{
			this.SendPropertyChanging();
			entity.KeHoach = this;
		}
		
		private void detach_DatChos(DatCho entity)
		{
			this.SendPropertyChanging();
			entity.KeHoach = null;
		}
		
		private void attach_ThoiGians(ThoiGian entity)
		{
			this.SendPropertyChanging();
			entity.KeHoach = this;
		}
		
		private void detach_ThoiGians(ThoiGian entity)
		{
			this.SendPropertyChanging();
			entity.KeHoach = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NguoiDung")]
	public partial class NguoiDung : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _MatKhau;
		
		private string _HinhAnh;
		
		private string _HoTen;
		
		private System.Nullable<System.DateTime> _NgaySinh;
		
		private string _GioiTinh;
		
		private string _Email;
		
		private string _DiaChi;
		
		private System.Nullable<int> _ID_Quyen;
		
		private string _SDT;
		
		private int _DiemTieuDung;
		
		private string _Code;
		
		private EntitySet<DatCho> _DatChos;
		
		private EntityRef<Quyen> _Quyen;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnHinhAnhChanging(string value);
    partial void OnHinhAnhChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnNgaySinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySinhChanged();
    partial void OnGioiTinhChanging(string value);
    partial void OnGioiTinhChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnID_QuyenChanging(System.Nullable<int> value);
    partial void OnID_QuyenChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnDiemTieuDungChanging(int value);
    partial void OnDiemTieuDungChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    #endregion
		
		public NguoiDung()
		{
			this._DatChos = new EntitySet<DatCho>(new Action<DatCho>(this.attach_DatChos), new Action<DatCho>(this.detach_DatChos));
			this._Quyen = default(EntityRef<Quyen>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HinhAnh", DbType="NVarChar(100)")]
		public string HinhAnh
		{
			get
			{
				return this._HinhAnh;
			}
			set
			{
				if ((this._HinhAnh != value))
				{
					this.OnHinhAnhChanging(value);
					this.SendPropertyChanging();
					this._HinhAnh = value;
					this.SendPropertyChanged("HinhAnh");
					this.OnHinhAnhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(50)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="Date")]
		public System.Nullable<System.DateTime> NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="NVarChar(10)")]
		public string GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(100)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Quyen", DbType="Int")]
		public System.Nullable<int> ID_Quyen
		{
			get
			{
				return this._ID_Quyen;
			}
			set
			{
				if ((this._ID_Quyen != value))
				{
					if (this._Quyen.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_QuyenChanging(value);
					this.SendPropertyChanging();
					this._ID_Quyen = value;
					this.SendPropertyChanged("ID_Quyen");
					this.OnID_QuyenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="NVarChar(50)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiemTieuDung", DbType="Int NOT NULL")]
		public int DiemTieuDung
		{
			get
			{
				return this._DiemTieuDung;
			}
			set
			{
				if ((this._DiemTieuDung != value))
				{
					this.OnDiemTieuDungChanging(value);
					this.SendPropertyChanging();
					this._DiemTieuDung = value;
					this.SendPropertyChanged("DiemTieuDung");
					this.OnDiemTieuDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(9)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_DatCho", Storage="_DatChos", ThisKey="ID", OtherKey="ID_NguoiDung")]
		public EntitySet<DatCho> DatChos
		{
			get
			{
				return this._DatChos;
			}
			set
			{
				this._DatChos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Quyen_NguoiDung", Storage="_Quyen", ThisKey="ID_Quyen", OtherKey="ID", IsForeignKey=true)]
		public Quyen Quyen
		{
			get
			{
				return this._Quyen.Entity;
			}
			set
			{
				Quyen previousValue = this._Quyen.Entity;
				if (((previousValue != value) 
							|| (this._Quyen.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Quyen.Entity = null;
						previousValue.NguoiDungs.Remove(this);
					}
					this._Quyen.Entity = value;
					if ((value != null))
					{
						value.NguoiDungs.Add(this);
						this._ID_Quyen = value.ID;
					}
					else
					{
						this._ID_Quyen = default(Nullable<int>);
					}
					this.SendPropertyChanged("Quyen");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DatChos(DatCho entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung = this;
		}
		
		private void detach_DatChos(DatCho entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Phim")]
	public partial class Phim : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TenPhim;
		
		private string _MoTa;
		
		private string _Trailer;
		
		private string _BanQuyen;
		
		private System.DateTime _PhatHanh;
		
		private System.TimeSpan _DoDai;
		
		private string _DienVien;
		
		private string _Poster;
		
		private int _ID_TheLoai;
		
		private string _QuocGia;
		
		private EntitySet<KeHoach> _KeHoaches;
		
		private EntityRef<TheLoai> _TheLoai;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTenPhimChanging(string value);
    partial void OnTenPhimChanged();
    partial void OnMoTaChanging(string value);
    partial void OnMoTaChanged();
    partial void OnTrailerChanging(string value);
    partial void OnTrailerChanged();
    partial void OnBanQuyenChanging(string value);
    partial void OnBanQuyenChanged();
    partial void OnPhatHanhChanging(System.DateTime value);
    partial void OnPhatHanhChanged();
    partial void OnDoDaiChanging(System.TimeSpan value);
    partial void OnDoDaiChanged();
    partial void OnDienVienChanging(string value);
    partial void OnDienVienChanged();
    partial void OnPosterChanging(string value);
    partial void OnPosterChanged();
    partial void OnID_TheLoaiChanging(int value);
    partial void OnID_TheLoaiChanged();
    partial void OnQuocGiaChanging(string value);
    partial void OnQuocGiaChanged();
    #endregion
		
		public Phim()
		{
			this._KeHoaches = new EntitySet<KeHoach>(new Action<KeHoach>(this.attach_KeHoaches), new Action<KeHoach>(this.detach_KeHoaches));
			this._TheLoai = default(EntityRef<TheLoai>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenPhim", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string TenPhim
		{
			get
			{
				return this._TenPhim;
			}
			set
			{
				if ((this._TenPhim != value))
				{
					this.OnTenPhimChanging(value);
					this.SendPropertyChanging();
					this._TenPhim = value;
					this.SendPropertyChanged("TenPhim");
					this.OnTenPhimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTa", DbType="NVarChar(MAX)")]
		public string MoTa
		{
			get
			{
				return this._MoTa;
			}
			set
			{
				if ((this._MoTa != value))
				{
					this.OnMoTaChanging(value);
					this.SendPropertyChanging();
					this._MoTa = value;
					this.SendPropertyChanged("MoTa");
					this.OnMoTaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Trailer", DbType="NVarChar(100)")]
		public string Trailer
		{
			get
			{
				return this._Trailer;
			}
			set
			{
				if ((this._Trailer != value))
				{
					this.OnTrailerChanging(value);
					this.SendPropertyChanging();
					this._Trailer = value;
					this.SendPropertyChanged("Trailer");
					this.OnTrailerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BanQuyen", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string BanQuyen
		{
			get
			{
				return this._BanQuyen;
			}
			set
			{
				if ((this._BanQuyen != value))
				{
					this.OnBanQuyenChanging(value);
					this.SendPropertyChanging();
					this._BanQuyen = value;
					this.SendPropertyChanged("BanQuyen");
					this.OnBanQuyenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhatHanh", DbType="Date NOT NULL")]
		public System.DateTime PhatHanh
		{
			get
			{
				return this._PhatHanh;
			}
			set
			{
				if ((this._PhatHanh != value))
				{
					this.OnPhatHanhChanging(value);
					this.SendPropertyChanging();
					this._PhatHanh = value;
					this.SendPropertyChanged("PhatHanh");
					this.OnPhatHanhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoDai", DbType="Time NOT NULL")]
		public System.TimeSpan DoDai
		{
			get
			{
				return this._DoDai;
			}
			set
			{
				if ((this._DoDai != value))
				{
					this.OnDoDaiChanging(value);
					this.SendPropertyChanging();
					this._DoDai = value;
					this.SendPropertyChanged("DoDai");
					this.OnDoDaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DienVien", DbType="NVarChar(MAX)")]
		public string DienVien
		{
			get
			{
				return this._DienVien;
			}
			set
			{
				if ((this._DienVien != value))
				{
					this.OnDienVienChanging(value);
					this.SendPropertyChanging();
					this._DienVien = value;
					this.SendPropertyChanged("DienVien");
					this.OnDienVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Poster", DbType="NVarChar(100)")]
		public string Poster
		{
			get
			{
				return this._Poster;
			}
			set
			{
				if ((this._Poster != value))
				{
					this.OnPosterChanging(value);
					this.SendPropertyChanging();
					this._Poster = value;
					this.SendPropertyChanged("Poster");
					this.OnPosterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_TheLoai", DbType="Int NOT NULL")]
		public int ID_TheLoai
		{
			get
			{
				return this._ID_TheLoai;
			}
			set
			{
				if ((this._ID_TheLoai != value))
				{
					if (this._TheLoai.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_TheLoaiChanging(value);
					this.SendPropertyChanging();
					this._ID_TheLoai = value;
					this.SendPropertyChanged("ID_TheLoai");
					this.OnID_TheLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuocGia", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string QuocGia
		{
			get
			{
				return this._QuocGia;
			}
			set
			{
				if ((this._QuocGia != value))
				{
					this.OnQuocGiaChanging(value);
					this.SendPropertyChanging();
					this._QuocGia = value;
					this.SendPropertyChanged("QuocGia");
					this.OnQuocGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phim_KeHoach", Storage="_KeHoaches", ThisKey="ID", OtherKey="ID_Phim")]
		public EntitySet<KeHoach> KeHoaches
		{
			get
			{
				return this._KeHoaches;
			}
			set
			{
				this._KeHoaches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TheLoai_Phim", Storage="_TheLoai", ThisKey="ID_TheLoai", OtherKey="ID", IsForeignKey=true)]
		public TheLoai TheLoai
		{
			get
			{
				return this._TheLoai.Entity;
			}
			set
			{
				TheLoai previousValue = this._TheLoai.Entity;
				if (((previousValue != value) 
							|| (this._TheLoai.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TheLoai.Entity = null;
						previousValue.Phims.Remove(this);
					}
					this._TheLoai.Entity = value;
					if ((value != null))
					{
						value.Phims.Add(this);
						this._ID_TheLoai = value.ID;
					}
					else
					{
						this._ID_TheLoai = default(int);
					}
					this.SendPropertyChanged("TheLoai");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_KeHoaches(KeHoach entity)
		{
			this.SendPropertyChanging();
			entity.Phim = this;
		}
		
		private void detach_KeHoaches(KeHoach entity)
		{
			this.SendPropertyChanging();
			entity.Phim = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Phong")]
	public partial class Phong : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ID_Rap;
		
		private string _TenPhong;
		
		private EntitySet<KeHoach> _KeHoaches;
		
		private EntityRef<RapPhim> _RapPhim;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnID_RapChanging(int value);
    partial void OnID_RapChanged();
    partial void OnTenPhongChanging(string value);
    partial void OnTenPhongChanged();
    #endregion
		
		public Phong()
		{
			this._KeHoaches = new EntitySet<KeHoach>(new Action<KeHoach>(this.attach_KeHoaches), new Action<KeHoach>(this.detach_KeHoaches));
			this._RapPhim = default(EntityRef<RapPhim>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Rap", DbType="Int NOT NULL")]
		public int ID_Rap
		{
			get
			{
				return this._ID_Rap;
			}
			set
			{
				if ((this._ID_Rap != value))
				{
					if (this._RapPhim.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_RapChanging(value);
					this.SendPropertyChanging();
					this._ID_Rap = value;
					this.SendPropertyChanged("ID_Rap");
					this.OnID_RapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenPhong", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenPhong
		{
			get
			{
				return this._TenPhong;
			}
			set
			{
				if ((this._TenPhong != value))
				{
					this.OnTenPhongChanging(value);
					this.SendPropertyChanging();
					this._TenPhong = value;
					this.SendPropertyChanged("TenPhong");
					this.OnTenPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phong_KeHoach", Storage="_KeHoaches", ThisKey="ID", OtherKey="ID_Phong")]
		public EntitySet<KeHoach> KeHoaches
		{
			get
			{
				return this._KeHoaches;
			}
			set
			{
				this._KeHoaches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RapPhim_Phong", Storage="_RapPhim", ThisKey="ID_Rap", OtherKey="ID", IsForeignKey=true)]
		public RapPhim RapPhim
		{
			get
			{
				return this._RapPhim.Entity;
			}
			set
			{
				RapPhim previousValue = this._RapPhim.Entity;
				if (((previousValue != value) 
							|| (this._RapPhim.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RapPhim.Entity = null;
						previousValue.Phongs.Remove(this);
					}
					this._RapPhim.Entity = value;
					if ((value != null))
					{
						value.Phongs.Add(this);
						this._ID_Rap = value.ID;
					}
					else
					{
						this._ID_Rap = default(int);
					}
					this.SendPropertyChanged("RapPhim");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_KeHoaches(KeHoach entity)
		{
			this.SendPropertyChanging();
			entity.Phong = this;
		}
		
		private void detach_KeHoaches(KeHoach entity)
		{
			this.SendPropertyChanging();
			entity.Phong = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Quyen")]
	public partial class Quyen : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Quyen1;
		
		private EntitySet<NguoiDung> _NguoiDungs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnQuyen1Changing(string value);
    partial void OnQuyen1Changed();
    #endregion
		
		public Quyen()
		{
			this._NguoiDungs = new EntitySet<NguoiDung>(new Action<NguoiDung>(this.attach_NguoiDungs), new Action<NguoiDung>(this.detach_NguoiDungs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Quyen", Storage="_Quyen1", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Quyen1
		{
			get
			{
				return this._Quyen1;
			}
			set
			{
				if ((this._Quyen1 != value))
				{
					this.OnQuyen1Changing(value);
					this.SendPropertyChanging();
					this._Quyen1 = value;
					this.SendPropertyChanged("Quyen1");
					this.OnQuyen1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Quyen_NguoiDung", Storage="_NguoiDungs", ThisKey="ID", OtherKey="ID_Quyen")]
		public EntitySet<NguoiDung> NguoiDungs
		{
			get
			{
				return this._NguoiDungs;
			}
			set
			{
				this._NguoiDungs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NguoiDungs(NguoiDung entity)
		{
			this.SendPropertyChanging();
			entity.Quyen = this;
		}
		
		private void detach_NguoiDungs(NguoiDung entity)
		{
			this.SendPropertyChanging();
			entity.Quyen = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RapPhim")]
	public partial class RapPhim : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TenRap;
		
		private string _DiaChi;
		
		private EntitySet<Phong> _Phongs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTenRapChanging(string value);
    partial void OnTenRapChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    #endregion
		
		public RapPhim()
		{
			this._Phongs = new EntitySet<Phong>(new Action<Phong>(this.attach_Phongs), new Action<Phong>(this.detach_Phongs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenRap", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenRap
		{
			get
			{
				return this._TenRap;
			}
			set
			{
				if ((this._TenRap != value))
				{
					this.OnTenRapChanging(value);
					this.SendPropertyChanging();
					this._TenRap = value;
					this.SendPropertyChanged("TenRap");
					this.OnTenRapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RapPhim_Phong", Storage="_Phongs", ThisKey="ID", OtherKey="ID_Rap")]
		public EntitySet<Phong> Phongs
		{
			get
			{
				return this._Phongs;
			}
			set
			{
				this._Phongs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Phongs(Phong entity)
		{
			this.SendPropertyChanging();
			entity.RapPhim = this;
		}
		
		private void detach_Phongs(Phong entity)
		{
			this.SendPropertyChanging();
			entity.RapPhim = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TheLoai")]
	public partial class TheLoai : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TheLoai1;
		
		private EntitySet<Phim> _Phims;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTheLoai1Changing(string value);
    partial void OnTheLoai1Changed();
    #endregion
		
		public TheLoai()
		{
			this._Phims = new EntitySet<Phim>(new Action<Phim>(this.attach_Phims), new Action<Phim>(this.detach_Phims));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="TheLoai", Storage="_TheLoai1", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TheLoai1
		{
			get
			{
				return this._TheLoai1;
			}
			set
			{
				if ((this._TheLoai1 != value))
				{
					this.OnTheLoai1Changing(value);
					this.SendPropertyChanging();
					this._TheLoai1 = value;
					this.SendPropertyChanged("TheLoai1");
					this.OnTheLoai1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TheLoai_Phim", Storage="_Phims", ThisKey="ID", OtherKey="ID_TheLoai")]
		public EntitySet<Phim> Phims
		{
			get
			{
				return this._Phims;
			}
			set
			{
				this._Phims.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Phims(Phim entity)
		{
			this.SendPropertyChanging();
			entity.TheLoai = this;
		}
		
		private void detach_Phims(Phim entity)
		{
			this.SendPropertyChanging();
			entity.TheLoai = null;
		}
	}
}
#pragma warning restore 1591
